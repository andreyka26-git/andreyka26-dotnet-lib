version: '3.8'

services:
  # Pushes logs to stdout/stderr, docker captures them in /var/lib/docker/containers/*/*-json.log
  # Promtail watches these files and sends to Loki
  # Exposes /metrics endpoint for collecting the metrics by Prometheus
  node-service:
    build: ./node-service
    container_name: node-service
    ports:
      - "3000:3000"
    environment:
      # Set your Application Insights connection string here
      # You can get this from Azure Portal > Application Insights > Overview > Connection String
      - APPLICATIONINSIGHTS_CONNECTION_STRING=${APPLICATIONINSIGHTS_CONNECTION_STRING:-}
    networks:
      - observability
    labels:
      - "logging=promtail"

  # Metrics collection / aggregation
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - observability

  # Logs collection / aggregation pushed by promtail
  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
      - ./loki/wal:/wal
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - observability

  # Agent that ships logs from the docker container to Loki
  # usually deployed with the app itself (to be able to access the logs)
  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - observability

  # Visualization tool that can show metrics & logs from Prometheus, Loki, etc.
  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/simple-dashboard.json
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=1s
    depends_on:
      - prometheus
      - loki
    networks:
      - observability

  # Node Exporter for collecting system (hardware- and kernel-related) metrics (host machine metrics)
  # Exposes /metrics endpoint for collecting the metrics by Prometheus
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - observability

  # Cadvisor for collecting Container ONLY metrics
  # Exposes /metrics endpoint for collecting the metrics by Prometheus
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - observability

networks:
  observability:
    driver: bridge
